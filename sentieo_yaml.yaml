openapi: 3.0.1
info:
  description: Sentieo is world's best equity research platform. Here's the developers can try out the demos.
  version: 1.0.0
  title: Sentieo Developers API
  contact:
    email: support@sentieo.com
tags:
  - name: documents
    description: Document Search and Retrieval
  - name: Notes
    description: ''
  - name: Files  
  - name: security master
paths:
  /documents/get:
    get:
      tags:
        - documents
      summary: Find document by ID
      description: 'Returns html for a document e.g. 5cff7ca9668114405a001036 , 5d40b7385cf17cc7f1000cf3'
      operationId: getDocsById
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
        - name: id
          in: query
          description: ID of the document
          required: true
          schema:
            type: string
            example: 5cff7ca9668114405a001036
      responses:
        '200':
          description: Success.
          content:
            text/html:
              schema:
                type: string
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
                  
        '404':
          description: Document you are looking for could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documents404Response'
              
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Gateway401Response'
                  - $ref: '#/components/schemas/Documents401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
  /documents/search:
    post:
      tags:
        - documents
      summary: Search Documents
      description: Returns a list of documents ordered by most recent according to a fixed criteria.
      operationId: searchDocs
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/DocumentSearchRequestModel'
        description: Request Body
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDocumentSearchResponse'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
                  
        '404':
          description: Document you are looking for could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documents404Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Gateway401Response'
                  - $ref: '#/components/schemas/Documents401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response' 
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'        
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
  /documents/search_filters:
    get:
      tags:
        - documents
      summary: Get Search Filters
      operationId: getFilters
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Gateway401Response'
                  - $ref: '#/components/schemas/Documents401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
      security:
        - api_key: []      
  /documents/get-pdf:
    get:
      tags:
        - documents
      summary: Get Document PDF File
      description: 'Returns the pdf content of the document. e.g. 5cff7ca9668114405a001036 , 5d40b7385cf17cc7f1000cf3'
      operationId: getDocsPdfById
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
        - name: id
          in: query
          description: ID of the document
          required: true
          schema:
            type: string
            example: 5d40b7385cf17cc7f1000cf3
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
                  
        '404':
          description: Document you are looking for could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documents404Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Gateway401Response'
                  - $ref: '#/components/schemas/Documents401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'        
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
  /documents/get-meta:
    get:
      tags:
        - documents
      summary: Get Document Meta Data
      description: 'Returns the meta data for a document. e.g. 5cff7ca9668114405a001036 , 5d40b7385cf17cc7f1000cf3'
      operationId: getDocsMetaById
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
        - name: doc_ids
          in: query
          description: Ids of document separated by commas
          required: true
          schema:
            type: string
            example: 5d40b7385cf17cc7f1000cf3
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentsGetMetaResponse'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
                  
        '404':
          description: Document you are looking for could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documents404Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Gateway401Response'
                  - $ref: '#/components/schemas/Documents401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'        
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
 
  /documents/hits:
    get:
      tags:
        - documents
      summary: Search within a document for certain words.
      description: Returns frequency of words in a document
      operationId: getDocsByHits
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
        - name: doc_id
          in: query
          description: Document ID e.g. 5db821ae5ed0361db2000927
          required: true
          schema:
            type: string
            example: 5db821ae5ed0361db2000927
        - name: use_synonyms
          in: query
          description: true or false
          required: false
          schema:
            type: string
            example: 'false'
        - name: query
          in: query
          description: Word to be searched in a document e.g. cars
          required: true
          schema:
            type: string
            example: cars
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentsHitsResponse'
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
                  
        '404':
          description: Document you are looking for could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documents404Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Gateway401Response'
                  - $ref: '#/components/schemas/Documents401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'        
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
  /notes:
    get:
      summary: Fetch or Search in Notes
      tags:
        - Notes
      operationId: getAllNotes
      deprecated: false
      parameters:
        - name: term
          in: query
          required: false
          example: sales
          schema:
            type: string
        - name: filter
          in: query
          required: false
          example: 'note_type%20eq%20typed%20and%20note_type%20eq%20highlight%20and%20created_dt%20gte%202019-04-01T00:00:00Z'
          schema:
            type: string
        - name: offset
          in: query
          required: false
          example: 10
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          example: 10
          schema:
            type: integer
        - name: order
          in: query
          required: false
          example: updated_at:desc
          schema:
            type: string    
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotesResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
    post:
      summary: Create a new Note
      tags:
        - Notes
      operationId: createNote
      deprecated: false
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteCreateRequestModel'
        required: true
      responses:
        '201':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotesIdResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'   
        '409':
          description: Conflict Already Exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway409Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []      
  '/notes/{note_id}/tickers/{ticker}':
    post:
      summary: Adding a ticker to a note
      tags:
        - Notes
      operationId: Addingatickertoanote
      deprecated: false
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
        - name: note_id
          in: path
          required: true
          example: 5e7c56dcf8fe361771d55030
          schema:
            type: string
        - name: ticker
          in: path
          required: true
          example: aapl
          schema:
            type: string
      responses:
        '201':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostNotesTickersResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Gateway400Response'
                - $ref: '#/components/schemas/Notes400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Invalid note_id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notes404Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
    delete:
      summary: Deleting a ticker from a note
      tags:
        - Notes
      operationId: Deletingatickerfromanote
      deprecated: false
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
        - name: note_id
          in: path
          required: true
          example: 5e7c56dcf8fe361771d55030
          schema:
            type: string
        - name: ticker
          in: path
          required: true
          example: aapl
          schema:
            type: string
      responses:
        '204':
          description: Success.
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Gateway400Response'
                - $ref: '#/components/schemas/Notes400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Invalid note_id or ticker not present in note.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notes404Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
  '/notes/{note_id}/tags/{tag}':
    post:
      summary: Adding a tag
      tags:
        - Notes
      operationId: addNoteTags
      deprecated: false
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
        - name: note_id
          in: path
          required: true
          example: 5e7c56dcf8fe361771d55030
          schema:
            type: string
        - name: tag
          in: path
          required: true
          example: revenue
          schema:
            type: string
      responses:
        '201':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostNotesTagsResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Gateway400Response'
                - $ref: '#/components/schemas/Notes400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Invalid note_id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notes404Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
    delete:
      summary: Deleting a tag from a note
      tags:
        - Notes
      operationId: Deletingatagfromanote
      deprecated: false
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
        - name: note_id
          in: path
          required: true
          example: 5e7c56dcf8fe361771d55030
          schema:
            type: string
        - name: tag
          in: path
          required: true
          example: revenue
          schema:
            type: string
      responses:
        '204':
          description: Success.
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Gateway400Response'
                - $ref: '#/components/schemas/Notes400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Invalid note_id or tag not present in note.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notes404Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
  '/notes/{note_id}/attachments':
    post:
      summary: Adding files or attachements to a note
      tags:
        - Notes
      operationId: addNoteAttachments
      deprecated: false
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
        - name: note_id
          in: path
          required: true
          example: 5e7c56dcf8fe361771d55030
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddingAttachmentNotesRequestModel'
        required: true
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostNotesAttachmentsResponse'
        '201':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostNotesAttachmentsResponse'        
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Gateway400Response'
                - $ref: '#/components/schemas/Notes400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Invalid note_id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notes404Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
  '/notes/{note_id}/comments':
    get:
      summary: Fetching the comments on a note
      tags:
        - Notes
      operationId: getNoteComments
      deprecated: false
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
        - name: note_id
          in: path
          required: true
          example: 5e7c56dcf8fe361771d55030
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotesCommentsResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Gateway400Response'
                - $ref: '#/components/schemas/Notes400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Invalid note_id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notes404Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
  '/notes/{note_id}/fields':
    post:
      summary: Create a single field value on a note
      tags:
        - Notes
      operationId: createNoteField
      deprecated: false
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
        - name: note_id
          in: path
          required: true
          example: 5e7c56dcf8fe361771d55030
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldModel'
        required: true
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldModel'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Gateway400Response'
                - $ref: '#/components/schemas/Notes400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Invalid note_id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notes404Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
  '/notes/{note_id}/fields/{field_id}':
    post:
      summary: Update a single field value on a note
      tags:
        - Notes
      operationId: updateNoteField
      deprecated: false
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
        - name: note_id
          in: path
          required: true
          example: 5e7c56dcf8fe361771d55030
          schema:
            type: string
        - name: field_id
          in: path
          required: true
          example: 5ef050b7c0af314ac2df9d6b
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldModel'
        required: true
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldModel'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Gateway400Response'
                - $ref: '#/components/schemas/Notes400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Invalid note_id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notes404Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
    delete:
      summary: Delete a single field value on a note
      tags:
        - Notes
      operationId: deleteNoteField
      deprecated: false
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
        - name: note_id
          in: path
          required: true
          example: 5e7c56dcf8fe361771d55030
          schema:
            type: string
        - name: field_id
          in: path
          required: true
          example: 5ef050b7c0af314ac2df9d6b
          schema:
            type: string
      responses:
        '204':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldModel'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Gateway400Response'
                - $ref: '#/components/schemas/Notes400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Invalid note_id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notes404Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
  '/notes/{note_id}/highlights':
    get:
      summary: Fetching the highlights on a note
      tags:
        - Notes
      operationId: getNoteHighlights
      deprecated: false
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
        - name: note_id
          in: path
          required: true
          example: 5e7c56dcf8fe361771d55030
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotesHighlightsResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Gateway400Response'
                - $ref: '#/components/schemas/Notes400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Invalid note_id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notes404Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
  '/notes/{note_id}':
    get:
      summary: 'Fetching a note with id {note_id}'
      tags:
        - Notes
      operationId: getNoteId
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
        - name: note_id
          in: path
          required: true
          example: 5e7c56dcf8fe361771d55030
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotesIdResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Invalid note_id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notes404Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'        
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
    post:
      summary: Update a specific note
      tags:
        - Notes
      operationId: updateNoteId
      deprecated: false
      parameters:
        - name: note_id
          in: path
          required: true
          example: 5e7c56dcf8fe361771d55030
          schema:
            type: string
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNodeRequestModel'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotesIdResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Gateway400Response'
                - $ref: '#/components/schemas/Notes400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response' 
        '404':
          description: Invalid note_id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notes404Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
    delete:
      summary: 'Delete a Note with Id {note_id}'
      tags:
        - Notes
      operationId: deleteNoteId
      deprecated: false
      parameters:
        - name: note_id
          in: path
          required: true
          example: 5e7c56dcf8fe361771d55030
          schema:
            type: string
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Success.
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Gateway400Response'
                - $ref: '#/components/schemas/Notes400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Invalid note_id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notes404Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []      
  /sm/sentieo/securities/search:
    get:
      tags:
        - security master
      summary: Get Best Guesses In Sentieo Securities For External Security Identifier
      description: Search for best guesses in sentieo securities for this particular external security identifier like CapIQ Ticker.This API an be used to search for capital IQ tickers in the sentieo securities database.
      operationId: getSmSearch
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
        - name: ciq_tickers
          in: query
          description: Current CIQ Ticker.
          required: false
          schema:
            type: string
            example: 'NasdaqGS:AAPL'
        - name: old_ciq_tickers
          in: query
          description: Past CIQ Ticker. Use this if this CIQ ticker has now been replaced.
          required: false
          schema:
            type: string
        - name: cusip
          in: query
          required: false
          schema:
            type: string
        - name: old_market_symbols
          in: query
          required: false
          schema:
            type: string
        - name: bloomberg_ticker
          in: query
          required: false
          schema:
            type: string
        - name: company_name
          in: query
          required: false
          schema:
            type: string
        - name: figi
          in: query
          required: false
          schema:
            type: string
        - name: isin
          in: query
          required: false
          schema:
            type: string
        - name: permid
          in: query
          required: false
          schema:
            type: string
        - name: ric
          in: query
          required: false
          schema:
            type: string
        - name: sentieo_ticker
          in: query
          required: false
          schema:
            type: string     
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSecuritiesSearchResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
        
  /sm/sentieo/securities/map:
    get:
      tags:
        - security master
      summary: Gives Sentieo Tickers and External Security Identifiers mapping
      description: 'Get sentieo tickers and entity_ids for a list of external security identifiers like CapIQ Tickers, ISIN etc.'
      operationId: getSmMap
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
        - name: ciq_tickers
          in: query
          description: Comma Separated list of CapIQ Tickers
          required: false
          schema:
            type: string
            example: 'NasdaqGS:AAPL,NasdaqGS:MSFT'
        - name: figi
          in: query
          description: Comma Separated List of Figi Codes. Max 100 allowed. e.g. BBG000BPH459,BBG000B9XRY4
          required: false
          schema:
            type: string
        - name: bloomberg_ticker
          in: query
          description: Comma Separated List of Bloomberg Tickers. Max 100 allowed. e.g. ADP FP,VOW GR
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSecuritiesMapResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []

  /sm/user/entities:
    get:
      tags:
        - security master
      summary: Fetching all entities
      description: Returns a collection of entites
      operationId: getUserEntities
      parameters:
        - name: x-user-key
          in: header
          required: true
          schema:
            type: string
        - name: offset
          in: query
          description: 'The offset of the item at which to begin the response for entities. Default is 0.'
          required: false
          schema:
            type: number
            example: 0
        - name: limit
          in: query
          description: 'Maximum number of entities to return per request. Maximum is 100, default is 20.'
          required: false
          schema:
            type: number
            example: 20
        - name: ordering
          in: query
          description: 'Defines the attribute by which entities are to be sorted. Accepted values: -created_at created_at -updated_at, default is created_at.'
          required: false
          schema:
            type: string
            example: created_at
        - name: search
          in: query
          description: 'would perform search on attributes name, short_name.'
          required: false
          schema:
            type: string 
            example: AAPL
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmGetUserEntitiesResponseModel'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: [] 
    post:
      tags:
        - security master
      summary: Create an entity
      operationId: postUserEntities
      parameters:
        - name: x-user-key
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmPostUserEntitiesRequestModel'
        required: true
      responses:
        '201':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmPostUserEntitiesResponseModel'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Gateway400Response'
                  - $ref: '#/components/schemas/SmUser400Response'
                  - $ref: '#/components/schemas/SmUser400Response2'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
    
  /sm/user/entities/{id}/child_entities:
    get:
      tags:
        - security master
      summary: Returns a collection of entities which are children of the given {id} entity
      description: The output does not include content of the given entity.
      operationId: getUserChildEntities
      parameters:
        - name: x-user-key
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: 'The ID of the entity'
          required: true
          schema:
            type: string
            example: 1
        - name: offset
          in: query
          description: 'The offset of the item at which to begin the response for entities. Default is 0.'
          required: false
          schema:
            type: number
            example: 0
        - name: limit
          in: query
          description: 'Maximum number of entities to return per request. Maximum is 100, default is 20.'
          required: false
          schema:
            type: number
            example: 20   
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmGetUserChildEntitiesResponseModel'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Entity with id not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmUser404Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: [] 
  /sm/user/entities/{id}/child_securities:
    get:
      tags:
        - security master
      summary: Returns a collection of securities which are children of the given {id} entity
      description: The output does not include content of the given entity.
      operationId: getUserChildSecurities
      parameters:
        - name: x-user-key
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: 'The ID of the entity'
          required: true
          schema:
            type: string
            example: 1
        - name: offset
          in: query
          description: 'The offset of the item at which to begin the response for entities. Default is 0.'
          required: false
          schema:
            type: number
            example: 0
        - name: limit
          in: query
          description: 'Maximum number of entities to return per request. Maximum is 100, default is 20.'
          required: false
          schema:
            type: number
            example: 20   
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmGetUserChildSecuritiesResponseModel'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Entity with id not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmUser404Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: [] 
  
     
  /sm/user/securities:
    get:
      tags:
        - security master
      summary: Fetching all securities
      operationId: getAllSecurities
      parameters:
        - name: x-user-key
          in: header
          required: true
          schema:
            type: string
        - name: offset
          in: query
          description: 'The offset of the item at which to begin the response for securities. Default is 0.'
          required: false
          schema:
            type: number
            example: 0
        - name: limit
          in: query
          description: 'Maximum number of securities to return per request. Maximum is 100, default is 20.'
          required: false
          schema:
            type: number
            example: 20
        - name: ordering
          in: query
          description: 'Defines the attribute by which securities are to be sorted. Accepted values: -created_at created_at -updated_at, default is created_at.'
          required: false
          schema:
            type: string
            example: created_at
        - name: search
          in: query
          description: 'would perform search on attributes name, short_name.'
          required: false
          schema:
            type: string 
            example: AAPL 
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmGetSecuritiesResponseModel'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: [] 
    post:
      tags:
        - security master
      summary: Creates a security.
      operationId: createSecurity
      parameters:
        - in: header
          name: x-user-key
          required: true
          schema:
            type: string   
        - in: query
          name: force
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmCreateSecurityRequestModel'
        required: true
      responses:
        '201':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmCreateSecurityResponseModel'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Gateway400Response'
                  - $ref: '#/components/schemas/SmUser400Response'
                  - $ref: '#/components/schemas/SmUser400Response2'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'       
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
  
          
  /sm/user/securities/{id}/child_quotes:
    get:
      tags:
        - security master
      summary: Fetch Child Quotes of a Security
      operationId: getUserChildQuotesSecurity
      parameters:
        - name: x-user-key
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: 'The ID of the security'
          required: true
          schema:
            type: string
            example: 1 
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmGetChildQuotesSecurityResponseModel'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Security with id not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmUser404Response'         
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
         
        
  /sm/user/quotes:
    get:
      tags:
        - security master
      summary: Returns a collection of quotes.
      operationId: getAllQuotes
      parameters:
        - name: x-user-key
          in: header
          required: true
          schema:
            type: string
        - name: offset
          in: query
          description: 'The offset of the item at which to begin the response for quotes. Default is 0.'
          required: false
          schema:
            type: number
            example: 0
        - name: limit
          in: query
          description: 'Maximum number of quotes to return per request. Maximum is 100, default is 20.'
          required: false
          schema:
            type: number
            example: 20
        - name: ordering
          in: query
          description: 'Defines the attribute by which quotes are to be sorted. Accepted values: -created_at created_at -updated_at, default is created_at.'
          required: false
          schema:
            type: string
            example: created_at
        - name: search
          in: query
          description: 'would perform search on attributes name, short_name.'
          required: false
          schema:
            type: string 
            example: AAPL 
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmGetQuotesResponseModel'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: [] 
    post:
      tags:
        - security master
      summary: Creates a Quote.
      operationId: createQuote
      parameters:
        - in: header
          name: x-user-key
          required: true
          schema:
            type: string   
        - in: query
          name: force
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmCreateQuoteRequestModel'
        required: true
      responses:
        '201':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmCreateQuoteResponseModel'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Gateway400Response'
                  - $ref: '#/components/schemas/SmUser400Response'
                  - $ref: '#/components/schemas/SmUser400Response2'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
        
  /sm/user/quotes/{id}:
    get:
      tags:
        - security master
      summary: Fetching a specific quote.
      description: Returns the contents of the specific quotes.
      operationId: getUserSpecificQuote
      parameters:
        - name: x-user-key
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: 'The ID of the quote'
          required: true
          schema:
            type: string
            example: 1
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmGetUserSpecificQuoteResponseModel'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Quote with id not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmUser404Response'         
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: [] 
    patch:
      tags:
        - security master
      summary: Updates parts of the quote
      description: The values provided in the parameters are set as the new values in the system. If a parameter is not sent with the request, the system value remains unchanged.
      operationId: patchUserSpecificQuote
      parameters:
        - name: x-user-key
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: 'The ID of the quote'
          required: true
          schema:
            type: string
            example: 1   
        - in: query
          name: force
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmPatchUserSpecificQuoteRequestModel'
        required: true
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmPatchUserSpecificQuoteResponseModel'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Gateway400Response'
                  - $ref: '#/components/schemas/SmUser400Response'
                  - $ref: '#/components/schemas/SmUser400Response2'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Quote with id not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmUser404Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
    delete:
      tags:
        - security master
      summary: Deleting a Quote
      description: Soft deletes a quotes
      operationId: DeleteQuote
      parameters:
        - name: x-user-key
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: 'The ID of the quotes'
          required: true
          schema:
            type: string
            example: 1
      responses:
        '204':
          description: Success.
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Quote with id not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmUser404Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: [] 
        
  
  /sm/user/securities/{id}:
    get:
      tags:
        - security master
      summary: Fetching a specific security.
      description: Returns the contents of the specific securities.
      operationId: getUserSpecificSecurity
      parameters:
        - name: x-user-key
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: 'The ID of the security'
          required: true
          schema:
            type: string
            example: 1
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmGetUserSpecificSecurityResponseModel'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Gateway400Response'
                  - $ref: '#/components/schemas/SmUser400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Security with id not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmUser404Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: [] 
    patch:
      tags:
        - security master
      summary: Updates parts of a specific security.
      description: The values provided in the parameters are set as the new values in the system. If a parameter is not sent with the request, the system value remains unchanged.
      operationId: patchUserSpecificSecurity
      parameters:
        - name: x-user-key
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: 'The ID of the security'
          required: true
          schema:
            type: string
            example: 1   
        - in: query
          name: force
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmPatchUserSpecificSecurityRequestModel'
        required: true
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmPatchUserSpecificSecurityResponseModel'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Gateway400Response'
                  - $ref: '#/components/schemas/SmUser400Response'
                  - $ref: '#/components/schemas/SmUser400Response2'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Security with id not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmUser404Response'         
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
    delete:
      tags:
        - security master
      summary: Delete a Secuity
      description: Soft deletes a securities
      operationId: DeleteSecurity
      parameters:
        - name: x-user-key
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: 'The ID of the security'
          required: true
          schema:
            type: string
            example: 1
      responses:
        '204':
          description: Success.
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Gateway400Response'
                  - $ref: '#/components/schemas/SmUser400Response'
                  - $ref: '#/components/schemas/SmUser400Response2'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Security with id not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmUser404Response'         
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []  
      
  
  /sm/user/entities/{id}:
    get:
      tags:
        - security master
      summary: Fetching a specific entity
      description: Returns the contents of the specific entities
      operationId: getUserSpecificEntity
      parameters:
        - name: x-user-key
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: 'The ID of the entity'
          required: true
          schema:
            type: string
            example: 1
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmGetUserSpecificEntityResponseModel'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Entity with id not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmUser404Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: [] 
    patch:
      tags:
        - security master
      summary: Updates parts of the entity.
      description: The values provided in the parameters are set as the new values in the system. If a parameter is not sent with the request, the system value remains unchanged.
      operationId: patchUserSpecificEntity
      parameters:
        - name: x-user-key
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: 'The ID of the entity'
          required: true
          schema:
            type: string
            example: 1    
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmPatchUserSpecificEntityRequestModel'
        required: true
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmPatchUserSpecificEntityResponseModel'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Gateway400Response'
                  - $ref: '#/components/schemas/SmUser400Response'
                  - $ref: '#/components/schemas/SmUser400Response2'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Entity with id not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmUser404Response'         
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
    delete:
      tags:
        - security master
      summary: Delete an entity
      description: Soft deletes an entity
      operationId: DeleteEntity
      parameters:
        - name: x-user-key
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: 'The ID of the entity'
          required: true
          schema:
            type: string
            example: 1
      responses:
        '204':
          description: Success.
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '404':
          description: Entity with id not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmUser404Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []       
     
        
  /files:
    post:
      summary: Uploading a file
      tags:
        - Files
      operationId: UploadingaFile
      deprecated: false
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadFileRequestModel' 
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostFilesResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
        
  /file_url:
    post:
      summary: Uploading large files
      description: Uploads a file to the Sentieo servers. Returns the id of the Resource created in Sentieo.
      tags:
        - Files
      operationId: UploadingLargeFile
      deprecated: false
      parameters:
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadLargeFileRequestModel' 
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadLargeFileResponseModel'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
  /users:
    get:
      summary: Fetch User Details
      tags:
        - Users
      operationId: fetchUserDetails
      deprecated: false
      parameters:
        - name: id
          in: query
          required: false
          example: 5f6207a18572d213af76b06a
          schema:
            type: string
        - name: email
          in: query
          required: false
          example: example@example.com
          schema:
            type: string
        - name: x-user-key
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'        
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
  /fields:
    get:
      summary: Returns a collection of fields.
      tags:
        - Fields
      operationId: fetchFieldDetails
      deprecated: false
      parameters:
        - name: x-user-key
          in: header
          required: true
          schema:
            type: string
        - name: offset
          in: query
          required: false
          example: 10
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          example: 10
          schema:
            type: integer
        - name: search
          in: query
          description: 'would perform search on attributes name, key.'
          required: false
          schema:
            type: string
            example: custom_field_name
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFieldsResponseModel'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway400Response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway401Response'
        '403':
          description: Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway403Response'
        '410':
          description: Quota Exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway410Response'
        '429':
          description: Throttled/Too Many Requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway429Response'
        '500':
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway500Response'
            text/html:
              schema:
                type: string
      security:
        - api_key: []
  /fields/{id}:
      get:
        tags:
          - Fields
        summary: Fetching a specific field.
        description: Returns the contents of the specific field.
        operationId: getUserSpecificField
        parameters:
          - name: x-user-key
            in: header
            required: true
            schema:
              type: string
          - name: id
            in: path
            description: 'The ID of the field'
            required: true
            schema:
              type: string
              example: 1
        responses:
          '200':
            description: Success.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetSpecificFieldsResponseModel'
          '400':
            description: Bad request.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Gateway400Response'
          '401':
            description: Authorization information is missing or invalid.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Gateway401Response'
          '403':
            description: Invalid API key.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Gateway403Response'
          '404':
            description: Quote with id not exist.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SmUser404Response'
          '410':
            description: Quota Exceeded.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Gateway410Response'
          '429':
            description: Throttled/Too Many Requests.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Gateway429Response'
          '500':
            description: Internal error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Gateway500Response'
              text/html:
                schema:
                  type: string
        security:
          - api_key: []
externalDocs:
  description: Developer API Docs
  url: 'https://developer.sentieo.com/'
servers:
  - url: 'https://api.sentieo.com/v1'
components:
  schemas:
    CustomFieldModel:
      type: object
      properties:
        field_id:
          type: string
        field_name:
          type: string
        field_value:
          type: string
        field_values:
            type: array
            items:
              type: string
        field_type:
          type: string
        section_id: 
          type: string
        section_name:
          type: string
        col:
          type: integer
      required:
        - field_id
      example:
        field_id: 5ef050b7c0af314ac2df9d6b
        field_value: 123456
    SectionDataModel:
      type: array
      items:
        $ref: '#/components/schemas/CustomFieldModel'
    UploadFileRequestModel:
      type: object
      properties:
        files:
          type: string
          format: binary
        file:
          example: response.pdf
          type: string
      required:
        - files
      example:
        file: response.pdf
        files: b'abc'
        
    UploadLargeFileRequestModel:
      type: object
      properties:
        filename:
          type: string
          example: request.pdf
        content_type:
          type: string
          example: application/pdf
      required:
        - filename
      example:
        filename: request.pdf
        content_type: application/pdf
      
    UploadLargeFileResponseModel:
      type: object
      properties:
        upload_url:
          type: string
        id:
          type: string
        filename:
          type: string
        content_type:
          type: string

    NoteCreateRequestModel:
      type: object
      title: Creatinganote-TypedRequest
      example:
        ref: The unique identifier for the client
        type: typed
        title: This is a test note title
        content: This note can contain any html content
        category: Meeting
        tags:
          - guidance
          - revenue
        tickers: 
          - aapl
          - fb
        created_at: "2020-04-29T00:00:00"  
      properties:
        type:
          type: string
        title:
          type: string
        content:
          type: string
        file:
          type: array
          items:
            type: object
        ref:
          type: string
        category:
          type: string
        tags:
          type: array
          items:
            type: string
        tickers:
          type: array
          items:
            type: string
        created_at:
          type: string
        updated_at:
          type: string
        section_data:
          $ref: '#/components/schemas/SectionDataModel'
      required:
        - type
        - title
        - content
        - ref
        - category
        
    AddingAttachmentNotesRequestModel:
      title: AddingattachementtoanoteRequest
      example:
        files:
          - file_id: 5e7c82a1f8fe36176acc6594
            content_type: application/pdf
            filename: response.pdf
            created_at: "2020-01-01T00:00:00"
      type: object
      properties:
        files:
          type: array
          items:
            title: File
            example:
              file_id: 5e68d856a4bb6b1331f12d5a
              content_type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
              filename: ADasdSmm.xlsx
              created_at: "2020-01-01T00:00:00"
              updated_at: "2020-01-01T00:00:00"
            type: object
            properties:
              file_id:
                type: string
              content_type:
                type: string
              filename:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              title:
                type: string
            required:
              - file_id
              - content_type
              - filename

      required:
        - files
     
    UpdateNodeRequestModel:
      title: UpdatingaspecificnoteRequest
      example:
        title: This is a test note title
        content: Sentieo is world's best equity research platform.
      type: object
      properties:
        file:
          type: array
          items:
            title: File
            example:
              file_id: 5e68d856a4bb6b1331f12d5a
              content_type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
              filename: ADasdSmm.xlsx
            type: object
            properties:
              file_id:
                type: string
              content_type:
                type: string
              filename:
                type: string
            required:
              - file_id
              - content_type
              - filename
        title:
          type: string
        content:
          type: string
        tags:
          type: array
          items:
            type: string
        tickers:
          type: array
          items:
            type: string
        active:
          type: integer
        category:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        section_data:
          $ref: '#/components/schemas/SectionDataModel' 
          
    DocumentSearchRequestModel:
      type: object
      properties:
        date_range_from:
          type: string
          example: 01-Jun-2019
        size:
          type: integer
          example: 10
        sort:
          type: string
          example: 'score:desc'
        start:
          type: integer
          example: 0
        doc_type:
          type: array
          items:
            anyOf:
              - type: string
              - type: object
                properties:
                  name:
                    type: string
                  subtypes:
                    type: array
                    items:
                      type: string
                  tags:
                    type: array
                    items:
                      type: string
                  categories:
                    type: array
                    items:
                      type: string
                  authors:
                    type: array
                    items:
                      type: string
                  ctbids:
                    type: array
                    items:
                      type: string 
                  reasons:
                    type: array
                    items:
                      type: string 
                  styles:
                    type: array
                    items:
                      type: string
                  sections:
                    type: array
                    items:
                      type: object
          example:
            - ef
            - ppt
        tickers:
          type: string
          example: tsla
        date_range_to:
          type: string
          example: 21-Jan-2020
        query:
          type: string
          example: sales
        sectors:
          type: array
          items:
            anyOf:
              - type: object
                properties:
                  name:
                    type: string
                  subsectors:
                    type: array
                    items:
                      type: string
              - type: string
          example:
            - Information Technology
        use_synonyms:
          type: boolean
      example:
        date_range_from: 01-Jun-2019
        size: 10
        date_range_to: 21-Jan-2020
        sort: 'score:desc'
        start: 0
        doc_type:
          - ef
          - ppt
        tickers: aapl
        query: sales
        sectors: 
          - Information Technology
    
    UserEntityModel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        short_name:
          type: string
        datastream_ds_cmpy_code:
          type: number
        datastream_ds_comp_code:
          type: string
        capiq_company_id:
          type: number
        rkd_org_id:
          type: string
        tr_issuer_code:
          type: number
        tr_company_perm_id:
          type: number
        crunchbase_uuid:
          type: string
        crunchbase_permalink:
          type: string
        fds_entity_id:
          type: string
        cik_code:
          type: number
        lei_code:
          type: string
        client_entity_id:
          type: string
        other_names:
          type: array
          items:
            type: string
        active:
          type: number
        created_by:
          type: string
        owner:
          type: string
        owner_type:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        parent_entity_id:
          type: string
        ultimate_parent_entity_id:
          type: string
        primary_security_id:
          type: string 
        primary_quote_id:
          type: string 
        sentieo_entity_id:
          type: number   
      
    SmPostUserEntitiesRequestModel:
      type: object
      properties:
        name:
          type: string
        short_name:
          type: string
        parent_entity_id:
          type: string
        ultimate_security_id:
          type: string
        primary_security_id:
          type: string
        primary_quote_id:
          type: string
        datastream_ds_cmpy_code:
          type: number
        datastream_ds_comp_code:
          type: string
        capiq_company_id:
          type: string
        rkd_org_id:
          type: string
        tr_issuer_code:
          type: number
        tr_company_perm_id:
          type: number  
        crunchbase_uuid:
          type: string  
        crunchbase_permalink:
          type: string  
        fds_entity_id:
          type: string
        cik_code:
          type: number
        lei_code:
          type: string
        client_entity_id:
          type: string
        other_names:
          type: array
          items:
            type: string
      example:
        name: 'Apple Inc.'
        short_name: 'AAPL'
      required:
        - name
        - short_name
        
    SmPatchUserSpecificEntityRequestModel:
      allOf:
        - $ref: '#/components/schemas/SmPostUserEntitiesRequestModel'
          
    SmPostUserEntitiesResponseModel:
      allOf:
        - $ref: '#/components/schemas/UserEntityModel'
    
    SmGetUserSpecificEntityResponseModel:
      allOf:
        - $ref: '#/components/schemas/UserEntityModel'
    
    SmPatchUserSpecificEntityResponseModel:
      allOf:
        - $ref: '#/components/schemas/UserEntityModel'
    
    SmGetUserChildEntitiesResponseModel:
      type: object
      properties:
        offset:
          type: number
        limit:
          type: number
        entries:
          type: array
          items:
            $ref: '#/components/schemas/UserEntityModel'
    
    SmGetUserChildSecuritiesResponseModel:
      type: object
      properties:
        offset:
          type: number
        limit:
          type: number
        entries:
          type: array
          items:
            $ref: '#/components/schemas/UserEntityModel'
    
    SmGetUserEntitiesResponseModel:
      type: object
      properties:
        offset:
          type: number
        limit:
          type: number
        entries:
          type: array
          items:
            $ref: '#/components/schemas/UserEntityModel'
            
    UserSecurityModel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        short_name:
          type: string
        security_type:
          type: string
        is_primary_flag:
          type: boolean
        isin:
          type: string
        cusip_cins:
          type: string
        primary_ric:
          type: string
        rkd_code:
          type: number
        rkd_issue_code:
          type: number
        tr_sec_master_sec_code:
          type: number
        ciq_security_id:
          type: string
        fact_set_security_id:
          type: string
        datastream_ds_scty_code:
          type: string
        datastream_ds_sec_code:
          type: number
        tr_instrument_perm_id:
          type: number
        ibes_code:
          type: number
        ibes_s_ticker:
          type: string
        ibes_i_ticker:
          type: string
        primary_bbg_symbol:
          type: string
        primary_fact_set_symbol:
          type: string
        primary_ciq_symbol:
          type: string
        other_names:
          type: array
          items:
            type: string
        active:
          type: number
        created_by:
          type: string
        owner:
          type: string
        owner_type:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        issuer_id:
          type: string
        share_class_figi:
          type: string
    
    SmCreateSecurityRequestModel:
      type: object
      properties:
        issuer_id:
          type: string
        name:
          type: string
        short_name:
          type: string
        security_type:
          type: string
          enum: ['Unit', 'Equity', 'Derivative', 'Mutual Fund', 'Fixed Income', 'ETF', 'FX', 'Future', 'Future Option', 'Index', 'Indicator']
        is_primary_flag:
          type: boolean
        isin:
          type: string
        cusip_cins:
          type: string
        primary_ric:
          type: string
        rkd_code:
          type: number
        rkd_issue_code:
          type: number
        tr_sec_master_sec_code:
          type: number
        ciq_security_id:
          type: string
        fact_set_security_id:
          type: string
        datastream_ds_scty_code:
          type: string
        datastream_ds_sec_code:
          type: number
        tr_instrument_perm_id:
          type: number
        ibes_code:
          type: number
        ibes_s_ticker:
          type: string
        ibes_i_ticker:
          type: string
        primary_bbg_symbol:
          type: string
        primary_fact_set_symbol:
          type: string
        primary_ciq_symbol:
          type: string
        share_class_figi:
          type: string
        other_names:
          type: array
          items:
            type: string
      example:
        issuer_id : '6'
        name: 'Apple Public Share'
        short_name: 'AAPL'
        security_type: 'Equity'
      required:
        - name
        - short_name
        - issuer_id
        - security_type 
      
    
    SmCreateSecurityResponseModel:
      allOf:
        - $ref: '#/components/schemas/UserSecurityModel'
    
    SmGetSecuritiesResponseModel:
      type: object
      properties:
        offset:
          type: number
        limit:
          type: number
        entries:
          type: array
          items:
            $ref: '#/components/schemas/UserSecurityModel'
    
    SmGetUserSpecificSecurityResponseModel:
      allOf:
        - $ref: '#/components/schemas/UserSecurityModel'
      
    SmPatchUserSpecificSecurityRequestModel:
      allOf:
        - $ref: '#/components/schemas/SmCreateSecurityRequestModel'
   
    SmPatchUserSpecificSecurityResponseModel:
      allOf:
        - $ref: '#/components/schemas/UserSecurityModel'
    
    SmGetChildQuotesSecurityResponseModel:
      type: object
      properties:
        offset:
          type: number
        limit:
          type: number
        entries:
          type: array
          items:
            $ref: '#/components/schemas/UserSecurityModel'
            
    SmCreateQuoteRequestModel:
      type: object
      properties:
        security_id:
          type: string
        exchange_code:
          type: string
        name:
          type: string
        short_name:
          type: string
        sentieo_ticker:
          type: string
        exchange_mic_code:
          type: string
        exchange_region:
          type: string
        is_primary_flag:
          type: boolean
        exchange_symbol:
          type: string
        sedol:
          type: string
        ric:
          type: string
        ciq_symbol:
          type: string
        fact_set_symbol:
          type: string
        bbg_symbol:
          type: string
        datastream_infocode:
          type: string
        datastream_infocode_exchange:
          type: string
        tr_quote_perm_id:
          type: number
        figi:
          type: string
        other_names:
          type: array
          items:
            type: string
      example:
        security_id: '5'
        name: 'Apple Inc.'
        short_name: 'unique_short_name'
        exchange_code: 'NASDAQ'
      required:
        - security_id
        - short_name
        - name

    UserQuoteModel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        short_name:
          type: string
        sentieo_entity_id:
          type: number
        exchange_code:
          type: string
        exchange_mic_code:
          type: string
        exchange_region:
          type: string
        is_primary_flag:
          type: boolean
        exchange_symbol:
          type: string
        sedol:
          type: string
        ric:
          type: string
        ciq_symbol:
          type: string
        fact_set_symbol:
          type: string
        bbg_symbol:
          type: string
        datastream_infocode:
          type: string
        datastream_infocode_exchange:
          type: string
        tr_quote_perm_id:
          type: number
        other_names:
          type: array
          items:
            type: string
        active:
          type: number
        created_by:
          type: string
        owner:
          type: string
        guid:
          type: string
        owner_type:
          type: string
        created_at:
          type: string
        updated_at:
          type: string    
        security_id:
          type: string
        security_isin:
          type: string
        sentieo_ticker:
          type: string
        figi:
          type: string
        
    SmCreateQuoteResponseModel:
      allOf:
        - $ref: '#/components/schemas/UserQuoteModel'
    
    SmGetQuotesResponseModel:
      type: object
      properties:
        offset:
          type: number
        limit:
          type: number
        entries:
          type: array
          items:
            $ref: '#/components/schemas/UserQuoteModel'
    
    SmGetUserSpecificQuoteResponseModel:
      allOf:
        - $ref: '#/components/schemas/UserQuoteModel'
      
    SmPatchUserSpecificQuoteRequestModel:
      allOf:
        - $ref: '#/components/schemas/SmCreateQuoteRequestModel'
      
    SmPatchUserSpecificQuoteResponseModel:
      allOf:
        - $ref: '#/components/schemas/UserQuoteModel'  
 
    GetUserResponse:
      type: object
      properties:
        response:
          type: object
          properties:
            status:
              type: boolean
            msg:
              type: string
            total_users:
              type: number
            result:
              type: array
              items:
                type: object
                properties:
                  username:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  id:
                    type: string
                  active:
                    type: boolean
                  email:
                    type: string
                    
    FieldModel:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        key:
          type: string
        type:
          type: string
        options:
          type: array
          items:
            type: string
        other_flags:
          type: object
        description:
          type: object
        default:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        active:
          type: integer
        group:
          type: string
        created_by:
          type: string
        source:
          type: string
        formula:
          type: object

    GetFieldsResponseModel:
      type: object
      properties:
        total_count:
          type: integer
        offset:
          type: integer
        limit:
          type: integer
        entries:
          type: array
          items:
            $ref: '#/components/schemas/FieldModel'

    GetSpecificFieldsResponseModel:
      allOf:
        - $ref: '#/components/schemas/FieldModel'

    NotesIdResponse:
      type: object
      properties:
        category:
          type: string
        attachments:
          type: array
          items:
            type: object
        shared_with_users:
          type: array
          items:
            type: string
        section_data:
          $ref: '#/components/schemas/SectionDataModel'
        title:
          type: string
        highlights:
          type: array
          items:
            type: string  
        created_at:
          type: string
        tags:
          type: array
          items:
            type: string  
        updated_at:
          type: string
        active:
          type: string
        version:
          type: string
        short_url:
          type: string
        owner:
          type: string
        tickers:
          type: array
          items:
            type: string  
        type:
          type: string
        id:
          type: string
        shared_with_groups:
          type: array
          items:
            type: string
    NotesNotValidSessionResponse:
      type: object
      properties:
        counter:
          type: integer
        result:
          type: array
          items:
            type: string 
        response:
          type: object
    GetNotesResponse:
      type: object
      properties:
        offset:
          type: integer
        limit:
          type: integer
        entries:
          type: array
          items:
            type: object
    PostNotesTickersResponse:
      type: object
      properties:
        tickers:
          type: array
          items:
            type: string
        parent_note_id:
          type: string  
          
    PostNotesTagsResponse:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
        parent_note_id:
          type: string  
          
    PostNotesAttachmentsResponse:
      type: object
      properties:
        message:
          type: string
          
    GetNotesCommentsResponse:
      type: object
      properties:
        offset:
          type: integer
        limit:
          type: integer
        entries:
          type: array
          items:
            type: object
            
    GetNotesHighlightsResponse:
      type: object
      properties:
        offset:
          type: integer
        limit:
          type: integer
        entries:
          type: array
          items:
            type: object   
            
    Notes400Response:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
    
    Notes404Response:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
    
    SmUser404Response:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
    
    SmUser400Response:
      type: object
      properties:
        error:
          type: object
          properties:
            message:
              type: string
            code:
              type: string
            detail:
              type: object
    
    SmUser400Response2:
      type: object
      properties:
        response:
          type: object
          properties:
            status:
              type: boolean
            msg:
              type: array
              items:
                type: string
    
          
    Gateway401Response:
      type: object
      properties:
        response:
          type: object
          properties:
            status:
              type: boolean
            msg:
              type: array
              items:
                type: string 
          
    Gateway403Response:
      type: object
      properties:
        response:
          type: object
          properties:
            status:
              type: boolean
            msg:
              type: array
              items:
                type: string 
                
    
    Gateway400Response:
      type: object
      properties:
        response:
          type: object
          properties:
            status:
              type: boolean
            msg:
              type: array
              items:
                type: string
    
    Gateway409Response:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            inner_error:
              type: object
              properties:
                ref:
                  type: string
                id:
                  type: string
                request_id:
                  type: string
                
    Gateway410Response:
      type: object
      properties:
        response:
          type: object
          properties:
            status:
              type: boolean
            msg:
              type: array
              items:
                type: string 
                
    Gateway429Response:
      type: object
      properties:
        response:
          type: object
          properties:
            status:
              type: boolean
            msg:
              type: array
              items:
                type: string
    
    Gateway500Response:
      type: object
      properties:
        response:
          type: object
          properties:
            status:
              type: boolean
            msg:
              type: array
              items:
                type: string            
    
    Documents404Response:
      type: object
      properties:
        counter:
          type: integer
        result:
          type: array
          items:
            type: string 
        response:
          type: object
    
    Documents401Response:
      type: object
      properties:
        counter:
          type: integer
        result:
          type: array
          items:
            type: string 
        response:
          type: object      
    
    PostDocumentSearchResponse:
      type: object
      properties:
        response:
          type: object
          properties:
            status:
              type: string
            msg:
              type: array
              items:
                type: string
        result:
          type: object
          properties:
            total:
              type: integer
            doc_type:
              type: array
              items:
                type: string
            doc_subtype:
              type: array
              items:
                type: string
            docs:
              type: array
              items:
                type: object
                properties:
                  country_code:
                    type: string
                  ticker:
                    type: string
                  doc_subtype:
                    type: string
                  size:
                    type: integer
                  doc_type:
                    type: string
                  sectors:
                    type: array
                    items:
                      type: string
                  title:
                    type: string
                  country:
                    type: string
                  is_pdf_doc:
                    type: boolean
                  subsectors:
                    type: array
                    items:
                      type: string  
                  filing_date:
                    type: string
                  score:
                    type: integer
                  company_name:
                    type: string
                  tickers:
                    type: array
                    items:
                      type: string
                  doc_id:
                    type: string
                  note_shared_with_users:
                    type: array
                    items:
                      type: string
                  tt_prelim:
                    type: boolean
                  rr_ctbids:
                    type: string
                  note_tags:
                    type: array
                    items:
                      type: string
                  note_category:
                    type: string
                  note_updated_at:
                    type: string
                  note_encoding:
                    type: string
                  note_owner:
                    type: string
                  note_shared_with_groups:
                    type: array
                    items:
                      type: string
                  note_created_at:
                    type: string
                  note_section_data:
                    type: array
                    items:
                      type: object
                      properties:
                        section_name:
                          type: string
                        section_fields:
                          type: array
                          items:
                            $ref: '#/components/schemas/CustomFieldModel'
    GetDocumentsGetMetaResponse:
      type: object
      properties:
        counter:
          type: integer
        result:
          type: object
        response:
          type: object
          properties:
            status:
              type: boolean
            msg:
              type: string
    
    GetDocumentsHitsResponse:
      type: object
      properties:
        status:
          type: object
          properties:
            status:
              type: boolean
            msg:
              type: array
              items:
                type: string  
        response:
          type: object
          properties:
            id:
              type: string
            title:
              type: string
            doc_type:
              type: string
            doc_subtype:
              type: string
            filingdate:
              type: string
            total_hits:
              type: integer
            hits:
              type: array
              items:
                type: string
    
    GetDocumentsHitsWrongDocIdResponse:
      type: object
      properties:
        status:
          type: object
          properties:
            status:
              type: boolean
            msg:
              type: array
              items:
                type: string  
            api:
              type: string
            field:
              type: string
            error:
              type: string  
        response:
          type: object
          properties:
            total_hits:
              type: integer
            hits:
              type: array
              items:
                type: string
    
    GetSecuritiesSearchResponse:
      type: object
      properties:
        alternative_matches:
          type: array
          items:
            type: object
        perfect_matches:
          type: array
          items:
            type: object
    
    GetSecuritiesMapResponse:
      type: object
      properties:
        status:
          type: object
          properties:
            status:
              type: boolean
            msg:
              type: array
              items:
                type: string  
        response:
          type: object
          
    PostFilesResponse:
      type: object
      properties:
        success:
          type: boolean
        filename:
          type: string
        content_type:
          type: string
        id:
          type: string
       
  securitySchemes:
    api_key:
      type: apiKey
      name: x-api-key
      in: header
